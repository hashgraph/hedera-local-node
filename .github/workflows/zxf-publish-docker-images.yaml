name: "ZXF: Publish Docker Images"
on:
  workflow_dispatch:
    inputs:
      new-version:
        description: "New Release Version (ie. 0.30.0):"
        type: string
        required: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

env:
  LC_ALL: C.UTF-8

jobs:
  prepare-release:
    name: Release / Prepare
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    outputs:
      version: ${{ steps.extract.outputs.version }}
      tag: ${{ steps.extract.outputs.tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pinned to v3.3.0

      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"

      - name: Validate Version
        run: |
          VALID_VERSION="$(semver validate "${{ inputs.new-version }}")"
          
          if [[ "${VALID_VERSION}" != "valid" ]]; then 
            echo "::error title=Version Error::The supplied new-version parameter of '${{ inputs.new_version || github.ref_name }}' is invalid and does not conform to the semantic versioning specifications."
            exit 2
          fi

      - name: Extract Version
        id: extract
        run: |
          RELEASE_VERSION="$(semver get release "${{ inputs.new-version }}")"
          PRERELEASE_VERSION="$(semver get prerel "${{ inputs.new-version }}")"

          FINAL_VERSION="${RELEASE_VERSION}"
          [[ -n "${PRERELEASE_VERSION}" ]] && FINAL_VERSION="${RELEASE_VERSION}-${PRERELEASE_VERSION}"

          echo "version=${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"
          echo "tag=v${FINAL_VERSION}" >>"${GITHUB_OUTPUT}"

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # pinned to v1.0.0
        with:
          workload_identity_provider: 'projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions'
          service_account: 'swirlds-automation@hedera-registry.iam.gserviceaccount.com'

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@62d4898025f6041e16b1068643bfc5a696863587 # pinned to v1.1.0

      - name: Retrieve the Build Artifact
        run: gsutil cp "gs://hedera-platform-builds/build-${{ steps.extract.outputs.tag }}.zip" .

      - name: Retrieve the Artifact Checksum/Hash
        run: gsutil cp "gs://hedera-platform-builds/build-${{ steps.extract.outputs.tag }}.sha384" .

      - name: Validate the Build Artifact
        run: sha384sum -c "build-${{ steps.extract.outputs.tag }}.sha384"

      - name: Attach Artifact to Workflow Run
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pinned to v3.1.2
        with:
          name: hedera-node-build-${{ steps.extract.outputs.tag }}
          path: |
            build-${{ steps.extract.outputs.tag }}.zip
            build-${{ steps.extract.outputs.tag }}.sha384


  deploy-haveged-image:
    name: Deploy / Haveged / Image
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    needs:
      - prepare-release
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pinned to v3.3.0

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # pinned to v1.0.0
        with:
          workload_identity_provider: 'projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions'
          service_account: 'swirlds-automation@hedera-registry.iam.gserviceaccount.com'
          token_format: access_token

      - name: Setup Docker Buildx QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pinned to v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pinned to v2.4.1

      - name: Authorize Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pinned to v2.1.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.google-auth.outputs.access_token }}

      - name: Build and Push Image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pinned to v4.0.0
        with:
          push: true
          context: ${{ github.workspace }}/docker/network-node-haveged
          platforms: |
            linux/arm64
            linux/amd64
          tags: |
            gcr.io/hedera-registry/network-node-haveged:${{ needs.prepare-release.outputs.version }}

  deploy-base-image:
    name: Deploy / Base / Image
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    needs:
      - prepare-release
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pinned to v3.3.0

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # pinned to v1.0.0
        with:
          workload_identity_provider: 'projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions'
          service_account: 'swirlds-automation@hedera-registry.iam.gserviceaccount.com'
          token_format: access_token

      - name: Setup Docker Buildx QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pinned to v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pinned to v2.4.1

      - name: Authorize Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pinned to v2.1.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.google-auth.outputs.access_token }}

      - name: Build and Push Image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pinned to v4.0.0
        with:
          push: true
          context: ${{ github.workspace }}/docker/network-node-base
          platforms: |
            linux/arm64
            linux/amd64
          tags: |
            gcr.io/hedera-registry/network-node-base:${{ needs.prepare-release.outputs.version }}

  deploy-network-node-image:
    name: Deploy / Network Node / Image
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    needs:
      - prepare-release
      - deploy-base-image
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pinned to v3.3.0

      - name: Authenticate to Google Cloud
        id: google-auth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # pinned to v1.0.0
        with:
          workload_identity_provider: 'projects/101730247931/locations/global/workloadIdentityPools/hedera-registry-pool/providers/hedera-registry-gh-actions'
          service_account: 'swirlds-automation@hedera-registry.iam.gserviceaccount.com'
          token_format: access_token

      - name: Setup Docker Buildx QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pinned to v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pinned to v2.4.1

      - name: Authorize Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pinned to v2.1.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.google-auth.outputs.access_token }}

      - name: Download Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # pinned to v3.0.2
        with:
          name: hedera-node-build-${{ needs.prepare-release.outputs.tag }}
          path: docker/main-network-node/sdk

      - name: Extract Artifact Contents
        working-directory: docker/main-network-node/sdk
        run: unzip "build-${{ needs.prepare-release.outputs.tag }}.zip" "data/*"

      - name: Build and Push Image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pinned to v4.0.0
        with:
          push: true
          context: ${{ github.workspace }}/docker/main-network-node
          platforms: |
            linux/arm64
            linux/amd64
          tags: |
            gcr.io/hedera-registry/main-network-node:${{ needs.prepare-release.outputs.version }}
          build-args: |
            IMAGE_TAG=${{ needs.prepare-release.outputs.version }}

  report-published-images:
    name: Deploy / Base / Image
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    needs:
      - prepare-release
      - deploy-base-image
      - deploy-network-node-image
      - deploy-haveged-image
    steps:
      - name: Render Job Summary
        run: |
          printf "### Published Docker Images\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| Image Name | Version | URL | Supported Architectures |\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| ---------- | ------- | --- | ----------------------- |\n" >> "${GITHUB_STEP_SUMMARY}"
          printf "| %s | %s | %s | %s |\n" \
            "gcr.io/hedera-registry/network-node-base" \
            "${{ needs.prepare-release.outputs.version }}" \
            "[GCP Console](https://console.cloud.google.com/gcr/images/hedera-registry/global/network-node-base)" \
            "linux/amd64, linux/arm64" >> "${GITHUB_STEP_SUMMARY}"
          
          printf "| %s | %s | %s | %s |\n" \
            "gcr.io/hedera-registry/network-node-haveged" \
            "${{ needs.prepare-release.outputs.version }}" \
            "[GCP Console](https://console.cloud.google.com/gcr/images/hedera-registry/global/network-node-haveged)" \
            "linux/amd64, linux/arm64" >> "${GITHUB_STEP_SUMMARY}"
          
          printf "| %s | %s | %s | %s |\n" \
            "gcr.io/hedera-registry/main-network-node" \
            "${{ needs.prepare-release.outputs.version }}" \
            "[GCP Console](https://console.cloud.google.com/gcr/images/hedera-registry/global/main-network-node)" \
            "linux/amd64, linux/arm64" >> "${GITHUB_STEP_SUMMARY}"

          printf "\n\n" >> "${GITHUB_STEP_SUMMARY}"
